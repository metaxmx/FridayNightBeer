package util

import javax.inject.Singleton

import com.google.common.base.Charsets.UTF_8
import com.google.common.io.Resources
import org.apache.commons.io.FileUtils
import org.json4s.JsonAST.{JString, JValue}
import org.json4s.native.JsonMethods._
import play.api.Logger


/**
  * Utility to extract hashed resource names from asset manifest file generated by webpack.
  */
@Singleton
class CompiledAssets {

  private[this] val assetsManifest = "assets.json"

  private[this] lazy val assetsJson: JValue = {
    val res = Resources.getResource(assetsManifest)
    val resStr = Resources.toString(res, UTF_8)
    parse(resStr)
  }

  private[this] def extract(entry: String, extension: String = "js"): String = {
    assetsJson \ entry \ extension match {
      case JString(s) => s
      case other =>
        Logger(getClass).error(s"""Extraction of Asset Manifest value failed: "$entry" / "$extension" is: $other""")
        throw new RuntimeException("error parsing asset manifest")
    }
  }

  val polyfills = extract("polyfills")
  val vendor = extract("vendor")
  val app = extract("app")

  val vendorStyle = extract("vendor-style", "css")
  val appStyle = extract("app-style", "css")

}
